/**
 * Error Prone 컴파일 시점 버그 검출 도구
 * 코드의 잠재적 버그와 안티패턴을 컴파일 시점에 감지
 */

apply plugin: 'net.ltgt.errorprone'

dependencies {
    errorprone('com.google.errorprone:error_prone_core:2.24.0')
    errorproneJavac('com.google.errorprone:javac:9+181-r4173-1')
}

tasks.withType(JavaCompile) {
    options.errorprone {
        // Spring Boot 친화적 설정
        disable('ImmutableEnumChecker') // enum은 변경 가능해도 OK
        disable('MissingOverride') // Lombok과 충돌 방지
        disable('FieldCanBeFinal') // Spring의 필드 주입과 충돌

        // JavaDoc 관련 (한국 프로젝트에서 @date, @author 많이 사용)
        disable('InvalidBlockTag') // @date, @author 등 커스텀 태그 허용
        disable('MissingSummary') // JavaDoc summary 강제하지 않음

        // Java Time API (Asia/Seoul 기본 사용하는 한국 프로젝트)
        disable('JavaTimeDefaultTimeZone') // LocalDateTime.now() 허용

        disable('UnusedVariable') // Error Prone 2.24.0에서 버그 있음
        disable('UnusedMethod')

        // 성능 관련 체크만 활성화 (안전한 것들만)
        error('StreamResourceLeak')
        error('EqualsIncompatibleType')
        error('DefaultCharset')

        // 코드 품질 체크 (경고만)
        warn('EmptyCatch')
        warn('FallThrough')
        warn('ReferenceEquality')    }

    // 병렬 컴파일로 성능 향상
    options.fork = true
    options.forkOptions.jvmArgs = ['-Xmx2g']
}
